// Mocks generated by Mockito 5.4.6 from annotations
// in chinese_food_app/test/core/repositories/store_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:chinese_food_app/data/datasources/hotpepper_api_datasource.dart'
    as _i6;
import 'package:chinese_food_app/data/datasources/store_local_datasource.dart'
    as _i3;
import 'package:chinese_food_app/data/models/hotpepper_store_model.dart' as _i2;
import 'package:chinese_food_app/domain/entities/store.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHotpepperSearchResponse_0 extends _i1.SmartFake
    implements _i2.HotpepperSearchResponse {
  _FakeHotpepperSearchResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StoreLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoreLocalDatasource extends _i1.Mock
    implements _i3.StoreLocalDatasource {
  MockStoreLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> insertStore(_i5.Store? store) => (super.noSuchMethod(
        Invocation.method(
          #insertStore,
          [store],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateStore(_i5.Store? store) => (super.noSuchMethod(
        Invocation.method(
          #updateStore,
          [store],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteStore(String? storeId) => (super.noSuchMethod(
        Invocation.method(
          #deleteStore,
          [storeId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i5.Store?> getStoreById(String? storeId) => (super.noSuchMethod(
        Invocation.method(
          #getStoreById,
          [storeId],
        ),
        returnValue: _i4.Future<_i5.Store?>.value(),
      ) as _i4.Future<_i5.Store?>);

  @override
  _i4.Future<List<_i5.Store>> getAllStores() => (super.noSuchMethod(
        Invocation.method(
          #getAllStores,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Store>>.value(<_i5.Store>[]),
      ) as _i4.Future<List<_i5.Store>>);

  @override
  _i4.Future<List<_i5.Store>> getStoresByStatus(_i5.StoreStatus? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStoresByStatus,
          [status],
        ),
        returnValue: _i4.Future<List<_i5.Store>>.value(<_i5.Store>[]),
      ) as _i4.Future<List<_i5.Store>>);

  @override
  _i4.Future<List<_i5.Store>> searchStores(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchStores,
          [query],
        ),
        returnValue: _i4.Future<List<_i5.Store>>.value(<_i5.Store>[]),
      ) as _i4.Future<List<_i5.Store>>);
}

/// A class which mocks [HotpepperApiDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHotpepperApiDatasource extends _i1.Mock
    implements _i6.HotpepperApiDatasource {
  MockHotpepperApiDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HotpepperSearchResponse> searchStores({
    double? lat,
    double? lng,
    String? address,
    String? keyword,
    int? range = 3,
    int? count = 20,
    int? start = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchStores,
          [],
          {
            #lat: lat,
            #lng: lng,
            #address: address,
            #keyword: keyword,
            #range: range,
            #count: count,
            #start: start,
          },
        ),
        returnValue: _i4.Future<_i2.HotpepperSearchResponse>.value(
            _FakeHotpepperSearchResponse_0(
          this,
          Invocation.method(
            #searchStores,
            [],
            {
              #lat: lat,
              #lng: lng,
              #address: address,
              #keyword: keyword,
              #range: range,
              #count: count,
              #start: start,
            },
          ),
        )),
      ) as _i4.Future<_i2.HotpepperSearchResponse>);
}
